// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.Persistence;

#nullable disable

namespace Store.Persistence.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20240225163017_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Store.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9743),
                            IsDeleted = false,
                            Title = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9813),
                            IsDeleted = false,
                            Title = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9824),
                            IsDeleted = false,
                            Title = "Category 3"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9833),
                            IsDeleted = false,
                            Title = "Category 4"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9842),
                            IsDeleted = false,
                            Title = "Category 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9854),
                            IsDeleted = false,
                            Title = "Category 6"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9861),
                            IsDeleted = false,
                            Title = "Category 7"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9870),
                            IsDeleted = false,
                            Title = "Category 8"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9878),
                            IsDeleted = false,
                            Title = "Category 9"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 824, DateTimeKind.Local).AddTicks(9890),
                            IsDeleted = false,
                            Title = "Category 10"
                        });
                });

            modelBuilder.Entity("Store.Domain.CategoryFeature", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CategoryFeatures");
                });

            modelBuilder.Entity("Store.Domain.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4349),
                            IsDeleted = false,
                            Name = "Feature 1",
                            Type = 2,
                            Value = "false"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4398),
                            IsDeleted = false,
                            Name = "Feature 2",
                            Type = 3,
                            Value = "Value 2"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4410),
                            IsDeleted = false,
                            Name = "Feature 3",
                            Type = 1,
                            Value = "3"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4417),
                            IsDeleted = false,
                            Name = "Feature 4",
                            Type = 2,
                            Value = "true"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4425),
                            IsDeleted = false,
                            Name = "Feature 5",
                            Type = 3,
                            Value = "Value 5"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4436),
                            IsDeleted = false,
                            Name = "Feature 6",
                            Type = 1,
                            Value = "6"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4445),
                            IsDeleted = false,
                            Name = "Feature 7",
                            Type = 2,
                            Value = "false"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4452),
                            IsDeleted = false,
                            Name = "Feature 8",
                            Type = 3,
                            Value = "Value 8"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4460),
                            IsDeleted = false,
                            Name = "Feature 9",
                            Type = 1,
                            Value = "9"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(4467),
                            IsDeleted = false,
                            Name = "Feature 10",
                            Type = 2,
                            Value = "true"
                        });
                });

            modelBuilder.Entity("Store.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Code = "P001",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9022),
                            Description = "Description for Product 1",
                            ImgUrl = "URL for Product 1 Image",
                            IsDeleted = false,
                            Title = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Code = "P002",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9112),
                            Description = "Description for Product 2",
                            ImgUrl = "URL for Product 2 Image",
                            IsDeleted = false,
                            Title = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            Code = "P003",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9125),
                            Description = "Description for Product 3",
                            ImgUrl = "URL for Product 3 Image",
                            IsDeleted = false,
                            Title = "Product 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            Code = "P004",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9135),
                            Description = "Description for Product 4",
                            ImgUrl = "URL for Product 4 Image",
                            IsDeleted = false,
                            Title = "Product 4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            Code = "P005",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9144),
                            Description = "Description for Product 5",
                            ImgUrl = "URL for Product 5 Image",
                            IsDeleted = false,
                            Title = "Product 5"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 7,
                            Code = "P006",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9157),
                            Description = "Description for Product 6",
                            ImgUrl = "URL for Product 6 Image",
                            IsDeleted = false,
                            Title = "Product 6"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 8,
                            Code = "P007",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9165),
                            Description = "Description for Product 7",
                            ImgUrl = "URL for Product 7 Image",
                            IsDeleted = false,
                            Title = "Product 7"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 9,
                            Code = "P008",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9174),
                            Description = "Description for Product 8",
                            ImgUrl = "URL for Product 8 Image",
                            IsDeleted = false,
                            Title = "Product 8"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 10,
                            Code = "P009",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9183),
                            Description = "Description for Product 9",
                            ImgUrl = "URL for Product 9 Image",
                            IsDeleted = false,
                            Title = "Product 9"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Code = "P0010",
                            CreateDate = new DateTime(2024, 2, 25, 20, 0, 15, 826, DateTimeKind.Local).AddTicks(9195),
                            Description = "Description for Product 10",
                            ImgUrl = "URL for Product 10 Image",
                            IsDeleted = false,
                            Title = "Product 10"
                        });
                });

            modelBuilder.Entity("Store.Domain.ProductFeature", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ProductId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("Store.Domain.CategoryFeature", b =>
                {
                    b.HasOne("Store.Domain.Category", "Category")
                        .WithMany("CategoryFeatures")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Feature", "Feature")
                        .WithMany("CategoryFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Store.Domain.Product", b =>
                {
                    b.HasOne("Store.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Store.Domain.ProductFeature", b =>
                {
                    b.HasOne("Store.Domain.Feature", "Feature")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Product", "Product")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Store.Domain.Category", b =>
                {
                    b.Navigation("CategoryFeatures");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Store.Domain.Feature", b =>
                {
                    b.Navigation("CategoryFeatures");

                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Store.Domain.Product", b =>
                {
                    b.Navigation("ProductFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
